---

- name: install Nextcloud Python dependencies
  apt:
    pkg: "{{ nextcloud_dependencies_python }}"
    state: present
  tags:
    - role:nextcloud:install
    - role:nextcloud:upgrade

- name: install Nextcloud dependencies
  apt:
    pkg: "{{ nextcloud_dependencies }}"
    state: present
  tags:
    - role:nextcloud:install
    - role:nextcloud:upgrade

- name: gather Nextcloud instance facts
  include: nextcloud/gather-facts.yml
  tags:
    - role:nextcloud:install
    - role:nextcloud:upgrade
    - role:nextcloud:configure
    - role:nextcloud:maintenance-page
    - role:nextcloud:database
    - role:nextcloud:backup
    - role:nextcloud:apps

- name: create /var/www/.ansible if missing
  file:
    path: "/var/www/.ansible/tmp"
    state: directory
    owner: "{{ nextcloud_http_user }}"
    group: "{{ nextcloud_http_group }}"
    mode: 0750

- name: copy over Nextcloud maintenance page
  include: nextcloud/maintenance-page.yml
  tags:
    - role:nextcloud:install
    - role:nextcloud:upgrade
    - role:nextcloud:maintenance-page

- name: download new Nextcloud version if required
  include: nextcloud/download.yml
  when: __nextcloud_do_install|bool or __nextcloud_do_upgrade|bool
  tags:
    - role:nextcloud:install
    - role:nextcloud:upgrade

- name: setup Nextcloud MySQL database
  include: nextcloud/mysql.yml
  tags:
    - role:nextcloud:install
    - role:nextcloud:upgrade
    - role:nextcloud:database

- name: install Nextcloud
  include: nextcloud/install.yml
  when: __nextcloud_do_install|bool and not __nextcloud_config.stat.exists
  tags:
    - role:nextcloud:install

- name: backup Nextcloud
  include: nextcloud/backup.yml
  when: nextcloud_backup|bool and __nextcloud_do_upgrade|bool
  tags:
    - role:nextcloud:upgrade
    - role:nextcloud:backup

- name: upgrade Nextcloud
  include: nextcloud/upgrade.yml
  when: __nextcloud_do_upgrade|bool
  tags:
    - role:nextcloud:upgrade

- name: configure Nextcloud
  include: nextcloud/configure.yml
  tags:
    - role:nextcloud:configure

- name: finalize Nextcloud instance
  include: nextcloud/finalize.yml
  when: __nextcloud_do_install|bool or __nextcloud_do_upgrade|bool
  tags:
    - role:nextcloud:install
    - role:nextcloud:upgrade

- name: install/enable Nextcloud apps
  become: true
  become_user: "{{ nextcloud_http_user }}"
  nextcloud_app:
    name: "{{ nextcloud_item }}"
    nextcloud_path: "{{ nextcloud_instance }}"
    state: "{{ nextcloud_apps_upgrade|ternary('latest', 'enabled') }}"
  loop_control:
    loop_var: nextcloud_item
  register: __nextcloud_app_installed
  retries: 3
  delay: 3
  until: __nextcloud_app_installed is not failed
  with_items: "{{ nextcloud_apps }}"
  tags:
    - role:nextcloud:install
    - role:nextcloud:upgrade
    - role:nextcloud:apps

- name: disable Nextcloud apps
  become: true
  become_user: "{{ nextcloud_http_user }}"
  nextcloud_app:
    name: "{{ nextcloud_item }}"
    nextcloud_path: "{{ nextcloud_instance }}"
    state: disabled
  loop_control:
    loop_var: nextcloud_item
  with_items: "{{ nextcloud_apps_disabled }}"
  when:
    - nextcloud_apps_disabled|d()
  tags:
    - role:nextcloud:install
    - role:nextcloud:upgrade
    - role:nextcloud:apps

- name: create Nextcloud cronjob
  cron:
    name: "Nextcloud cronjob"
    minute: "*/15"
    user: "{{ nextcloud_http_user }}"
    job: "php -f {{ nextcloud_instance }}/cron.php"
    cron_file: nextcloud
  when: __nextcloud_do_install|bool or __nextcloud_do_upgrade|bool
  tags:
    - role:nextcloud:install
    - role:nextcloud:upgrade

- name: create Nextcloud logrotate rule
  template:
    src: nextcloud/nextcloud.logrotate.j2
    dest: /etc/logrotate.d/nextcloud
  when: __nextcloud_do_install|bool or __nextcloud_do_upgrade|bool
  tags:
    - role:nextcloud:install
    - role:nextcloud:upgrade

- include: apache-php.yml
  when: nextcloud_apache_php|d()
  tags:
    - role:nextcloud:apache

- name: copy nextcloud notify script
  template:
    src: nextcloud-notify-users.sh.j2
    dest: /usr/local/bin/nextcloud-notify-users.sh
    owner: root
    group: root
    mode: 0755
  tags:
    - role:nextcloud:scripts

- name: ensure /var/www/.ansible is deleted
  file:
    path: "/var/www/.ansible"
    state: absent
